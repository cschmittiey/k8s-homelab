---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.0.3/charts/library/common/values.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: echo-server
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      echo-server:
        strategy: RollingUpdate
        containers:
          echo-server:
            image:
              repository: ghcr.io/mendhak/http-https-echo
              tag: 36
            env:
              HTTP_PORT: &port 8080
              LOG_WITHOUT_NEWLINE: true
              LOG_IGNORE_PATH: /healthz
              PROMETHEUS_ENABLED: true
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
              seccompProfile:
                type: RuntimeDefault
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 64Mi
        pod:
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            runAsNonRoot: true
    service:
      echo-server:
        controller: echo-server
        ports:
          http:
            port: *port
    serviceMonitor:
      echo-server:
        serviceName: echo-server
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      echo-server:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: &host "{{ .Release.Name }}-external.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: echo-server
                  port: http
        tls:
          - hosts:
              - *host
      internal:
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}-internal.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: echo-server
                  port: http
        tls:
          - hosts:
              - *host
