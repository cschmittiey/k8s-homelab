---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app openwebui
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      openwebui:
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/open-webui/open-webui
              tag: 0.6@sha256:dc89eb6b7666bfc4d2759e14e228f98aa338b631f3a56e465d315165f6c232c6
            env:
              OLLAMA_BASE_URLS: "http://192.168.0.190:11434"
              OPENAI_API_BASE_URLS: "https://api.openai.com/v1;https://openrouter.ai/api/v1"
              OPENAI_API_KEYS:
                valueFrom:
                  secretKeyRef:
                    name: openai
                    key: OPENAI_API_KEY
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 200m
              limits:
                memory: 2048Mi
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: false
        # pod:
        #   securityContext:
        #     runAsUser: 568
        #     runAsGroup: 568
        #     runAsNonRoot: true
        #     fsGroup: 568
        #     fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: openwebui
        ports:
          http:
            port: 8080
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: &host "chat.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /app/backend/data
