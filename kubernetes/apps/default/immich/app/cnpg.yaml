apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: immich-cnpg
  namespace: default
spec:
  instances: 1
  storage:
    size: 64Gi
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16.3

  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: snappy
      wal:
        compression: snappy
        maxParallel: 8
      destinationPath: s3://cnpg/
      endpointURL: https://s3.cleeb.net
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster immich-cnpg-v0
      s3Credentials:
        accessKeyId:
          name: immich-cnpg
          key: minio-user
        secretAccessKey:
          name: immich-cnpg
          key: minio-pass

  postgresql:
    shared_preload_libraries:
      - "vectors.so"
    parameters:
      search_path: '"$user", public, vectors'


  bootstrap:
    initdb:
      postInitApplicationSQL: #List of SQL queries to be executed as a superuser in the application database right after is created - to be used with extreme care (by default empty)
        - CREATE EXTENSION IF NOT EXISTS "cube";
        - CREATE EXTENSION IF NOT EXISTS vectors;
        - CREATE EXTENSION IF NOT EXISTS earthdistance CASCADE;
        # - ALTER DATABASE app SET search_path TO "$user", public, vectors;
        - GRANT ALL ON SCHEMA vectors TO app;
        - GRANT SELECT ON TABLE pg_vector_index_stat to app;

  # # Note: previousCluster needs to be set to the name of the previous
  # # cluster when recovering from an existing cnpg cluster
  # bootstrap:
  #   recovery:
  #     source: &previousCluster immich-cnpg-v0

  resources:
    requests:
      cpu: 500m
    limits:
      memory: 4Gi
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: immich
  namespace: default
spec:
  immediate: true
  schedule: 0 0 0 * * *
  backupOwnerReference: self
  cluster:
    name: immich-cnpg
