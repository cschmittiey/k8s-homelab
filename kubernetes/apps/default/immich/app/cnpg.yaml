apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: immich-cnpg
  namespace: default
spec:
  instances: 1
  storage:
    size: 180Gi
  imageName: ghcr.io/tensorchord/cloudnative-vectorchord:16.9-0.4.3

  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cnpg/
      endpointURL: https://s3.cleeb.net
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster immich-cnpg-v1
      s3Credentials:
        accessKeyId:
          name: immich-cnpg-backup-secret
          key: AWS_ACCESS_KEY
        secretAccessKey:
          name: immich-cnpg-backup-secret
          key: AWS_SECRET_ACCESS_KEY
        region:
          name: immich-cnpg-backup-secret
          key: AWS_REGION

  postgresql:
    shared_preload_libraries:
      # - "vectors.so"
      - "vchord.so"
    parameters:
      search_path: '"$user", public, vectors'

  monitoring:
    enablePodMonitor: true

  # bootstrap:
  #   initdb:
  #     postInitApplicationSQL: #List of SQL queries to be executed as a superuser in the application database right after is created - to be used with extreme care (by default empty)
  #       - CREATE EXTENSION IF NOT EXISTS "cube";
  #       - CREATE EXTENSION IF NOT EXISTS vectors;
  #       - CREATE EXTENSION IF NOT EXISTS earthdistance CASCADE;
  #       # - ALTER DATABASE app SET search_path TO "$user", public, vectors;
  #       - GRANT ALL ON SCHEMA vectors TO app;
  #       - GRANT SELECT ON TABLE pg_vector_index_stat to app;

  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster
  bootstrap:
    recovery:
      source: &previousCluster immich-cnpg-v0

    # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        <<: *barmanObjectStore
        serverName: *previousCluster

  resources:
    requests:
      cpu: 500m
    limits:
      memory: 4Gi
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: immich
  namespace: default
spec:
  immediate: true
  schedule: 0 0 0 * * *
  backupOwnerReference: self
  cluster:
    name: immich-cnpg
